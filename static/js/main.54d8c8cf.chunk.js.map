{"version":3,"sources":["component/FileLayout.module.scss","component/JsonToCsv.module.scss","component/JsonViewLayout.module.scss","component/TableLayout.module.scss","modules/excel.js","component/FileLayout.js","component/JsonToCsv.js","component/JsonViewLayout.js","component/TableLayout.js","component/Title.js","container/ExcelContainer.js","App.js","serviceWorker.js","saga/index.js","modules/index.js","store/index.js","index.js"],"names":["module","exports","fileLayoutWrapper","wrapper","jsonViewLayoutWrapper","tableLayoutWrapper","SETFLAG","GETEXCELDATA","SETCHANGE","SETTABLECHANGE","GETEXCELDATA_SUC","setFlag","createAction","setChange","setTableChange","getExcelData","initialState","data","flag","handleActions","_handleActions","Object","defineProperty","state","action","produce","draft","payload","_action$payload","name","namespace","new_value","target","_action$payload2","sheet","find","f","FileLayout","props","fileChange","_useState","useState","_useState2","slicedToArray","title","setTitle","onDrop","useCallback","acceptedFiles","readXlsxFile","getSheets","then","sheets","arr","map","m","i","push","_useDropzone","useDropzone","getRootProps","getInputProps","isDragActive","react_default","a","createElement","assign","className","styles","JsonToCsv","dist_default","filename","concat","style","padding","background","border","cursor","borderRadius","JsonViewLayout","dataChange","main_default","src","margin","theme","displayDataTypes","onAdd","e","console","log","onEdit","iconStyle","TableLayout","tableChange","key","component_Title","component_JsonToCsv","react_handsontable","id","width","height","colHeaders","keys","rowHeaders","columnSorting","afterChange","licenseKey","Title","ExcelContainer","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_ref","asyncToGenerator","regenerator_default","mark","_callee","ExcelAction","wrap","_context","prev","next","t0","stop","_x","apply","arguments","_ref2","_callee2","_context2","_x2","_x3","_ref3","_callee3","_context3","setTimeout","_x4","_this$props$excel","excel","_this$state","component_FileLayout","Fragment","component_TableLayout","component_JsonViewLayout","Component","connect","dispatch","bindActionCreators","excelActions","App","container_ExcelContainer","Boolean","window","location","hostname","match","excelDataWatch","excelData","rootSaga","takeLatest","_marked","req","put","type","_marked2","all","fork","_marked3","combineReducers","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","composeWithDevTools","applyMiddleware","run","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.54d8c8cf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"fileLayoutWrapper\":\"FileLayout_fileLayoutWrapper__11xdf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"JsonToCsv_wrapper__25tEa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"jsonViewLayoutWrapper\":\"JsonViewLayout_jsonViewLayoutWrapper__35jlY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableLayoutWrapper\":\"TableLayout_tableLayoutWrapper__2IV4w\"};","import { createAction, handleActions } from 'redux-actions';\r\nimport produce from 'immer';\r\nimport data from 'asset/data.json';\r\n\r\nexport const SETFLAG = 'excel/SETFLAG'\r\nexport const GETEXCELDATA = 'excel/GETEXCELDATA'\r\nexport const SETCHANGE = 'excel/SETCHANGE'\r\nexport const SETTABLECHANGE = 'excel/SETTABLECHANGE'\r\nexport const GETEXCELDATA_SUC = 'excel/GETEXCELDATA_SUC'\r\n\r\nexport const setFlag = createAction(SETFLAG)\r\nexport const setChange = createAction(SETCHANGE)\r\nexport const setTableChange = createAction(SETTABLECHANGE)\r\nexport const getExcelData = createAction(GETEXCELDATA)\r\n\r\nconst initialState = {\r\n  data: data,\r\n  flag: false\r\n}\r\n\r\nexport default handleActions({\r\n  [SETFLAG]: (state, action) =>\r\n    produce(state, draft => {\r\n      draft.flag = true\r\n    }),\r\n  [GETEXCELDATA_SUC]: (state, action) =>\r\n    produce(state, draft => {\r\n      draft.data = action.payload\r\n      draft.flag = false\r\n    }),\r\n  [SETCHANGE]: (state, action) =>\r\n    produce(state, draft => {\r\n      const {\r\n        name,\r\n        namespace,\r\n        new_value\r\n      } = action.payload\r\n      const target = draft.data[namespace[0]][namespace[1]][namespace[2]]\r\n      draft.flag = true\r\n      target[name] = new_value\r\n      draft.flag = false\r\n    }),\r\n  [SETTABLECHANGE]: (state, action) =>\r\n    produce(state, draft => {\r\n      const {\r\n        data,\r\n        sheet\r\n      } = action.payload\r\n      const payload = data[0]\r\n      draft.flag = true\r\n      draft.data.find(f => f['name'] === sheet)['data'][payload[0]][payload[1]] = payload[3]\r\n      draft.flag = false\r\n    }),\r\n}, initialState)","import React, { useState, useCallback } from 'react'\r\nimport { useDropzone } from 'react-dropzone';\r\nimport readXlsxFile from 'read-excel-file';\r\nimport styles from './FileLayout.module.scss';\r\n\r\nconst FileLayout = (props) => {\r\n  const {\r\n    fileChange\r\n  } = props\r\n  const [title, setTitle] = useState('Drag & drop some files here, or click to select files')\r\n  const onDrop = useCallback(acceptedFiles => {\r\n    readXlsxFile(acceptedFiles[0], { getSheets: true }).then((sheets) => {\r\n      const arr = []\r\n      sheets.map((m, i) => {\r\n        return (\r\n          readXlsxFile(acceptedFiles[0], { sheet: m.name }).then((data) => {\r\n            arr.push({ \"name\": m.name, data })\r\n          })\r\n        )\r\n      })\r\n      fileChange(arr)\r\n    })\r\n    setTitle(acceptedFiles[0]['name'])\r\n  }, [fileChange])\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop })\r\n  return (\r\n    <div {...getRootProps()} className={styles.fileLayoutWrapper}>\r\n      <input {...getInputProps()} />\r\n      {\r\n        isDragActive ?\r\n          <p>Drop the files here ...</p> :\r\n          <p>{title}</p>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileLayout;","import React from 'react';\r\nimport CsvDownload from 'react-json-to-csv';\r\nimport styles from './JsonToCsv.module.scss';\r\n\r\nconst JsonToCsv = (props) => {\r\n  const {\r\n    data,\r\n    sheet\r\n  } = props\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <CsvDownload\r\n        data={data}\r\n        filename={`${sheet}.csv`}\r\n        style={{\r\n          padding: '0.3rem',\r\n          background: 'rgba(128, 128, 128, 0.5)',\r\n          border: '1px solid rgba(128, 128, 128, 0.5)',\r\n          cursor: 'pointer',\r\n          borderRadius: '5px',\r\n        }}\r\n      >\r\n        Download CSV\r\n      </CsvDownload>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JsonToCsv;","import React from 'react';\r\nimport ReactJson from 'react-json-view';\r\nimport styles from './JsonViewLayout.module.scss';\r\n\r\nconst JsonViewLayout = (props) => {\r\n  const {\r\n    data,\r\n    dataChange,\r\n  } = props\r\n  return (\r\n    <div className={styles.jsonViewLayoutWrapper}>\r\n      <ReactJson\r\n        src={data}\r\n        style={{ padding: '1rem', margin: '1rem', borderRadius: '10px' }}\r\n        name={null}\r\n        theme={\"google\"}\r\n        displayDataTypes={false}\r\n        onAdd={(e) => { console.log(e) }}\r\n        onEdit={(e) => { dataChange(e) }}\r\n        iconStyle={\"triangle\"}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JsonViewLayout;","import React from 'react';\r\nimport { JsonToCsv, Title } from 'component';\r\nimport { HotTable } from '@handsontable/react';\r\nimport 'handsontable/dist/handsontable.full.css';\r\nimport styles from './TableLayout.module.scss';\r\n\r\nconst TableLayout = (props) => {\r\n  const {\r\n    data,\r\n    tableChange\r\n  } = props\r\n  return (\r\n    data.map((m, i) =>\r\n      <div key={i} className={styles.tableLayoutWrapper}>\r\n        <Title data={<h4>{m.name}</h4>} />\r\n        <JsonToCsv data={m.data} sheet={m.name} />\r\n        <HotTable\r\n          id={m.name}\r\n          data={m.data}\r\n          width={'100%'}\r\n          height={'auto'}\r\n          colHeaders={Object.keys(m.data[0])[0] === '0' ? true : Object.keys(m.data[0])}\r\n          rowHeaders={true}\r\n          columnSorting={true}\r\n          // readOnly={true}\r\n          afterChange={(e) => { tableChange(e, m.name) }}\r\n          className={\"htCenter\"}\r\n          licenseKey={'non-commercial-and-evaluation'}\r\n        />\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default TableLayout;","import React from 'react';\r\nimport styles from './Title.module.scss';\r\n\r\nconst Title = (props) => {\r\n  const {\r\n    data,\r\n  } = props\r\n  return (\r\n      <div className={styles.title}>\r\n       {data}\r\n       </div>\r\n  );\r\n};\r\n\r\nexport default Title;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as excelActions from 'modules/excel';\r\nimport { FileLayout, JsonViewLayout, TableLayout, Title } from 'component';\r\n\r\nclass ExcelContainer extends Component {\r\n  dataChange = async (data) => {\r\n    const { ExcelAction } = this.props\r\n    try {\r\n      await ExcelAction.setChange(data)\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n  tableChange = async (data, sheet) => {\r\n    if (data) {\r\n      const { ExcelAction } = this.props\r\n      try {\r\n        await ExcelAction.setTableChange({ data, sheet })\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n  }\r\n  fileChange = async (data) => {\r\n    const { ExcelAction } = this.props\r\n    try {\r\n      await ExcelAction.setFlag()\r\n      await setTimeout(\r\n        () => {\r\n          ExcelAction.getExcelData(data)\r\n        }, 300)\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n  // componentDidMount() {\r\n  //   this.dataChange('test')\r\n  // }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      dataChange: this.dataChange,\r\n      tableChange: this.tableChange,\r\n      fileChange: this.fileChange\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      data,\r\n      flag\r\n    } = this.props.excel\r\n    const {\r\n      dataChange,\r\n      tableChange,\r\n      fileChange\r\n    } = this.state\r\n    return (\r\n      <div>\r\n        <Title data={<h1>Excel Viwer</h1>} />\r\n        <FileLayout data={data} fileChange={fileChange} />\r\n        {flag ?\r\n          <Title data={<h2>Loading</h2>} />\r\n          :\r\n          <>\r\n            <Title data={<h3>Excel Sheet</h3>} />\r\n            <TableLayout flag={flag} data={data} dataChange={dataChange} tableChange={tableChange} />\r\n            <Title data={<h3>JSON Data</h3>} />\r\n            <JsonViewLayout flag={flag} data={data} dataChange={dataChange} />\r\n          </>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    excel: state.excel\r\n  }),\r\n  (dispatch) => ({\r\n    ExcelAction: bindActionCreators(excelActions, dispatch)\r\n  })\r\n)(ExcelContainer);","import React from 'react';\nimport { ExcelContainer } from 'container';\n\nfunction App() {\n  return (\n    <div>\n      <ExcelContainer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { all, put, takeLatest, fork } from 'redux-saga/effects';\r\nimport { GETEXCELDATA_SUC, GETEXCELDATA } from 'modules/excel';\r\n\r\nexport function* excelDataWatch() {\r\n  yield takeLatest(GETEXCELDATA, excelData)\r\n}\r\nexport function* excelData(req) {\r\n  yield put({ type: GETEXCELDATA_SUC, payload: req.payload })\r\n}\r\n\r\nexport function* rootSaga() {\r\n  yield all([\r\n    fork(excelDataWatch),\r\n  ])\r\n}","import { combineReducers } from 'redux';\r\nimport excel from './excel';\r\n\r\nexport default combineReducers({\r\n  excel,\r\n})","import { createStore, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { rootSaga } from 'saga';\r\nimport reducers from 'modules';\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\nconst store = createStore(\r\n  reducers,\r\n  composeWithDevTools(\r\n    applyMiddleware(sagaMiddleware)\r\n  )\r\n)\r\nsagaMiddleware.run(rootSaga)\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from 'store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}